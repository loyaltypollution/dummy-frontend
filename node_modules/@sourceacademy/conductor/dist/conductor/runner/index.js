import{C as t}from"../../ConductorInternalError-Bfjhowsx.js";export{R as RunnerPlugin}from"../../RunnerPlugin-vcb8gq7m.js";import"../../ConductorError-C5tld8jg.js";import"../../importExternalModule-8c1kBggZ.js";import"../../importExternalPlugin-Grm0p47A.js";import"../../ChannelQueue-Bmt4Qwn3.js";import"../../common/ds/index.js";import"../../conduit/rpc/index.js";import"../../conduit/rpc/types/index.js";import"../types/moduleInterface/index.js";import"../../HelloServiceMessage-Bb4XIsxg.js";import"../../PluginServiceMessage-BqOS8Sde.js";class r{conductor;async startEvaluator(r){const i=await this.conductor.requestFile(r);if(!i)throw new t("Cannot load entrypoint file");for(await this.evaluateFile(r,i);!this.conductor.isStatusActive(5);){this.conductor.updateStatus(3,!0);const t=await this.conductor.requestChunk();this.conductor.updateStatus(3,!1),this.conductor.updateStatus(2,!0),await this.evaluateChunk(t),this.conductor.updateStatus(2,!1)}}async evaluateFile(t,r){return this.evaluateChunk(r)}constructor(t){this.conductor=t}}export{r as BasicEvaluator};
//# sourceMappingURL=index.js.map
