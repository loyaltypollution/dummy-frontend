import{a as r}from"../../../EvaluatorTypeError-DCoJB-gg.js";import{DataType as i}from"../../types/moduleInterface/index.js";import{a as t}from"../../../isSameType-Cjf1xs6t.js";import"../../../ConductorError-C5tld8jg.js";function o(o,s,n){if(s){const n=this.array_type(o);if(!t(n,s))throw new r("Array type assertion failure",i[s],i[n])}if(n){const i=this.array_length(o);if(i!==n)throw new r("Array length assertion failure",String(n),String(i))}}function s(i,t){const o=this.closure_arity(i);if(this.closure_is_vararg(i)?t<o:t!==o)throw new r("Closure arity assertion failure",String(t),String(o))}function n(o,s,n){if(s){const n=this.pair_head(o);if(!t(n.type,s))throw new r("Pair head assertion failure",i[s],i[n.type])}if(n){const s=this.pair_tail(o);if(!t(s.type,n))throw new r("Pair tail assertion failure",i[n],i[s.type])}}export{o as array_assert,s as closure_arity_assert,n as pair_assert};
//# sourceMappingURL=index.js.map
